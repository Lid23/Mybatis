<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noodles.mybatistechnicalinsider.mapper.BlogMapper">
    <resultMap type="Blog" id="detailedBlogResultMap">
        <constructor>
            <idArg column="blog_id" javaType="int" />
        </constructor>
        <result property="title" column="blog_title"/>
        <association property="author" resultMap="authorResult" />
        <collection property="posts" ofType="Post">
            <id property="id" column="post_id"/>
            <result property="content" column="post_content"/>
        </collection>
    </resultMap>

    <resultMap id="authorResult" type="Author">
        <id property="id" column="author_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
    </resultMap>

    <select id="selectBlogDetails" resultMap="detailedBlogResultMap">
        SELECT
            B.id AS blog_id,
            B.title AS blog_title,
            B.author_id AS blog_author_id,
            A.id AS author_id,
            A.username,
            A.password,
            A.email,
            P.id AS post_id,
            P.blog_id AS post_blog_id,
            P.content AS post_content
        FROM Blog B
            LEFT OUTER JOIN Author A ON B.author_id = A.id
            LEFT OUTER JOIN Post P
            ON B.id = P.blog_id
        WHERE B.id = #{id}
    </select>

    <select id="getOrderId" resultType="Long" useCache="false" flushCache="true">
        select AP_PLAN_LEDG_MAS_SEQ.nextval as orderId from dual
    </select>
</mapper>
